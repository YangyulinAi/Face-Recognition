function [net,traininfo] = CNN_TrainRGBData(TrainDataPath)

trainingSetup = load("./CNN_Final.mat");

imdsTrain = imageDatastore(TrainDataPath,"IncludeSubfolders",true,"LabelSource","foldernames");
[imdsTrain, imdsValidation] = splitEachLabel(imdsTrain,0.7);

% Resize the images to match the network input layer.
augimdsTrain = augmentedImageDatastore([227 227 3],imdsTrain);
augimdsValidation = augmentedImageDatastore([227 227 3],imdsValidation);

opts = trainingOptions("sgdm",...
    "ExecutionEnvironment","cpu",...
    "InitialLearnRate",0.01,...
    "Shuffle","every-epoch",...
    "Plots","training-progress",...
    "ValidationData",augimdsValidation);

layers = [
    % Input Layer
    imageInputLayer([227 227 3],"Name","Original Image")
    
    % Hidden Layer 1
    convolution2dLayer([3 3],32,"Name","Layer1-Convolution","Padding","same")
    batchNormalizationLayer("Name","Layer1-Nomalisation",...
                            "Offset",trainingSetup.Layer1_Nomalisation.Offset,...
                            "Scale",trainingSetup.Layer1_Nomalisation.Scale,...
                            "TrainedMean",trainingSetup.Layer1_Nomalisation.TrainedMean,...
                            "TrainedVariance",trainingSetup.Layer1_Nomalisation.TrainedVariance)
    leakyReluLayer(0.1,"Name","Layer1-Leaky Relu")
    maxPooling2dLayer([2 2],"Name","Layer1-Max Pooling","Stride",[2 2])
    
    % Hidden Layer 2
    convolution2dLayer([3 3],64,"Name","Layer2-Convolution","Padding","same",...
                      "Bias",trainingSetup.Layer2_Convolution.Bias,...
                      "Weights",trainingSetup.Layer2_Convolution.Weights)
    batchNormalizationLayer("Name","Layer2-Nomalisation",...
                            "Offset",trainingSetup.Layer2_Nomalisation.Offset,...
                            "Scale",trainingSetup.Layer2_Nomalisation.Scale,...
                            "TrainedMean",trainingSetup.Layer2_Nomalisation.TrainedMean,...
                            "TrainedVariance",trainingSetup.Layer2_Nomalisation.TrainedVariance)
    leakyReluLayer(0.1,"Name","Layer2-Leaky Relu")
    maxPooling2dLayer([2 2],"Name","Layer2-Max Pooling","Stride",[2 2])
    
    % Hidden Layer 3
    convolution2dLayer([3 3],128,"Name","Layer3-Convolution","Padding","same",...
                      "Bias",trainingSetup.Layer3_Convolution.Bias,...
                      "Weights",trainingSetup.Layer3_Convolution.Weights)
    batchNormalizationLayer("Name","Layer3-Nomalisation",...
                            "Offset",trainingSetup.Layer3_Nomalisation.Offset,...
                            "Scale",trainingSetup.Layer3_Nomalisation.Scale,...
                            "TrainedMean",trainingSetup.Layer3_Nomalisation.TrainedMean,...
                            "TrainedVariance",trainingSetup.Layer3_Nomalisation.TrainedVariance)
    leakyReluLayer(0.1,"Name","Layer3-Leaky Relu")
    maxPooling2dLayer([2 2],"Name","Layer3-Max Pooling","Stride",[2 2])
    
    % Hidden Layer 4
    convolution2dLayer([3 3],256,"Name","Layer4-Convolution","Padding","same",...
                      "Bias",trainingSetup.Layer4_Convolution.Bias,...
                      "Weights",trainingSetup.Layer4_Convolution.Weights)
    batchNormalizationLayer("Name","Layer4-Nomalisation",...
                            "Offset",trainingSetup.Layer4_Nomalisation.Offset,...
                            "Scale",trainingSetup.Layer4_Nomalisation.Scale,...
                            "TrainedMean",trainingSetup.Layer4_Nomalisation.TrainedMean,...
                            "TrainedVariance",trainingSetup.Layer4_Nomalisation.TrainedVariance)
    leakyReluLayer(0.1,"Name","Layer4-Leaky Relu")
    maxPooling2dLayer([2 2],"Name","Layer4-Max Pooling","Stride",[2 2])
    
    % Hidden Layer 5
    convolution2dLayer([3 3],512,"Name","Layer5-Convolution","Padding","same",...
                      "Bias",trainingSetup.Layer5_Convolution.Bias,...
                      "Weights",trainingSetup.Layer5_Convolution.Weights)
    batchNormalizationLayer("Name","Layer5-Nomalisation",...
                            "Offset",trainingSetup.Layer5_Nomalisation.Offset,...
                            "Scale",trainingSetup.Layer5_Nomalisation.Scale,...
                            "TrainedMean",trainingSetup.Layer5_Nomalisation.TrainedMean,...
                            "TrainedVariance",trainingSetup.Layer5_Nomalisation.TrainedVariance)
    leakyReluLayer(0.1,"Name","Layer5-Leaky Relu")
    maxPooling2dLayer([2 2],"Name","Layer5-Max Pooling","Stride",[2 2])
    
    % Hidden Layer 6
    convolution2dLayer([3 3],1024,"Name","Layer6-Convolution","Padding","same",...
                      "Bias",trainingSetup.Layer6_Convolution.Bias,...
                      "Weights",trainingSetup.Layer6_Convolution.Weights)
    batchNormalizationLayer("Name","Layer6-Nomalisation",...
                            "Offset",trainingSetup.Layer6_Nomalisation.Offset,...
                            "Scale",trainingSetup.Layer6_Nomalisation.Scale,...
                            "TrainedMean",trainingSetup.Layer6_Nomalisation.TrainedMean,...
                            "TrainedVariance",trainingSetup.Layer6_Nomalisation.TrainedVariance)
    leakyReluLayer(0.1,"Name","Layer6-Leaky Relu")
    
    % Output Layer
    convolution2dLayer([1 1],1000,"Name","Output Convolution Layer","Padding","same",...
                      "Bias",trainingSetup.OutputConvolutionLayer.Bias,...
                      "Weights",trainingSetup.OutputConvolutionLayer.Weights)
    globalAveragePooling2dLayer("Name","Global Average Pooling")
    fullyConnectedLayer(30,"Name","Fully Connected Layer")
    softmaxLayer("Name","softmax")
    classificationLayer("Name","classoutput")];

[net, traininfo] = trainNetwork(augimdsTrain,layers,opts);